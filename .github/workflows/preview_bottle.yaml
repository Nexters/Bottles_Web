name: Preview Deployment - Bottle
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_BOTTLE }}
  TURBO_TOKEN: ${{ secrets.VERCEL_ACCESS_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  NEXT_PUBLIC_SERVER_BASE_URL: ${{secrets.NEXT_PUBLIC_SERVER_BASE_URL }}
  TEST_ACCESS_TOKEN: ${{secrets.TEST_ACCESS_TOKEN }}
  TEST_REFRESH_TOKEN: ${{secrets.TEST_REFRESH_TOKEN }}
on:
  push:
    branches-ignore:
      - main
jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - run: pnpm install
      - run: pnpm run build
      - run: pnpx playwright install --with-deps
      - name: create dotenv
        run: |
          touch apps/bottle/.env.local
          echo "TEST_ACCESS_TOKEN=${{ secrets.TEST_ACCESS_TOKEN }}" >> apps/bottle/.env.local
          echo "TEST_REFRESH_TOKEN=${{ secrets.TEST_REFRESH_TOKEN }}" >> apps/bottle/.env.local
          echo "NEXT_PUBLIC_SERVER_BASE_URL=${{ secrets.NEXT_PUBLIC_SERVER_BASE_URL }}" >> apps/bottle/.env.local
        env:
          NEXT_PUBLIC_SERVER_BASE_URL: ${{ secrets.NEXT_PUBLIC_SERVER_BASE_URL }}
      - run: pnpm run ci
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
      - name: vercel-preview-url
        uses: zentered/vercel-preview-url@v1.1.9
        id: vercel_preview_url
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_ACCESS_TOKEN }}
        with:
          vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID_BOTTLE }}
      - name: Get URL
        run: echo "https://${{ steps.vercel_preview_url.outputs.preview_url }}"
      - name: Send Discord Notification
        env:
          DATA: |
            {
              "content": "<@stakbucks>",
              "embeds": [
                {
                  "title": "üëÄ Bottle ÎØ∏Î¶¨Î≥¥Í∏∞Í∞Ä Ï§ÄÎπÑÎêòÏóàÏñ¥Ïöî",
                  "description": "üëâ https://${{ steps.vercel_preview_url.outputs.preview_url }}",
                  "color": 65280
                }
              ]
            }
        run: |
          curl -X POST -H 'Content-type: application/json' \
          -d "$DATA" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

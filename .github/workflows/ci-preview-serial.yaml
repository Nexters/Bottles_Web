name: Preview CI - Parellel
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  TURBO_TOKEN: ${{ secrets.VERCEL_ACCESS_TOKEN }}
  NEXT_PUBLIC_SERVER_BASE_URL: ${{secrets.NEXT_PUBLIC_SERVER_BASE_URL }}
  TEST_ACCESS_TOKEN: ${{secrets.TEST_ACCESS_TOKEN }}
  TEST_REFRESH_TOKEN: ${{secrets.TEST_REFRESH_TOKEN }}
on:
  push:
    branches-ignore:
      - main
jobs:
  Setup:
    runs-on: ubuntu-latest
    steps:
      # checkout and install pnpm
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false
      # setup node
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # install dependencies
      - run: npx pnpm i -r

      # set .env.local
      - name: create dotenv
        run: |
          touch apps/bottle/.env.local
          echo "TEST_ACCESS_TOKEN=${{ secrets.TEST_ACCESS_TOKEN }}" >> apps/bottle/.env.local
          echo "TEST_REFRESH_TOKEN=${{ secrets.TEST_REFRESH_TOKEN }}" >> apps/bottle/.env.local
          echo "NEXT_PUBLIC_SERVER_BASE_URL=${{ secrets.NEXT_PUBLIC_SERVER_BASE_URL }}" >> apps/bottle/.env.local
        env:
          NEXT_PUBLIC_SERVER_BASE_URL: ${{ secrets.NEXT_PUBLIC_SERVER_BASE_URL }}

      # install playwright depedencies only if @bottlesteam/bottle is not cached
      - run: pnpx playwright install --with-deps

      # run turbo tasks
      - run: pnpm run ci

  Deploy-Bottle:
    runs-on: ubuntu-latest
    steps:
      # checkout and install pnpm
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false
      # setup node
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Deploy Bottle to Vercel
        run: |
          npm install --global vercel@latest
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_BOTTLE }}
      - name: Get Vercel Preview
        uses: zentered/vercel-preview-url@v1.1.9
        id: vercel_preview_url
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_ACCESS_TOKEN }}
        with:
          vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID_BOTTLE }}
      - name: Get URL
        run: echo "https://${{ steps.vercel_preview_url.outputs.preview_url }}"
      - name: Send Discord Notification
        env:
          DATA: |
            {
              "content": "<@stakbucks>",
              "embeds": [
                {
                  "tile": "üëÄ Bottle ÎØ∏Î¶¨Î≥¥Í∏∞Í∞Ä Ï§ÄÎπÑÎêòÏóàÏñ¥Ïöî",
                  "description": "üëâ https://${{ steps.vercel_preview_url.outputs.preview_url }}",
                  "color": 65280
                }
              ]
            }
        run: |
          curl -X POST -H 'Content-type: application/json' \
          -d "$DATA" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

  Deploy-Web:
    runs-on: ubuntu-latest
    steps:
      # checkout and install pnpm
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false
      # setup node
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Deploy Web to Vercel
        run: |
          npm install --global vercel@latest  
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      - name: Get Vercel Preview
        uses: zentered/vercel-preview-url@v1.1.9
        id: vercel_preview_url_web
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_ACCESS_TOKEN }}
        with:
          vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID_WEB }}
      - name: Get URL
        run: echo "https://${{ steps.vercel_preview_url_web.outputs.preview_url }}"
      - name: Send Discord Notification
        env:
          DATA: |
            {
              "content": "<@stakbucks>",
            "embeds": [
              {
                "title": "üëÄ Web ÎØ∏Î¶¨Î≥¥Í∏∞Í∞Ä Ï§ÄÎπÑÎêòÏóàÏñ¥Ïöî",
                  "description": "üëâ https://${{ steps.vercel_preview_url_web.outputs.preview_url }}",
                  "color": 65280
                }
              ]
            }
        run: |
          curl -X POST -H 'Content-type: application/json' \
          -d "$DATA" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

name: Run Turbo Tasks
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_BOTTLE }}
  VERCEL_PROJECT_ID_WEB: ${{ secrets.VERCEL_PROJECT_ID }}
  TURBO_TOKEN: ${{ secrets.VERCEL_ACCESS_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  NEXT_PUBLIC_SERVER_BASE_URL: ${{secrets.NEXT_PUBLIC_SERVER_BASE_URL }}
  TEST_ACCESS_TOKEN: ${{secrets.TEST_ACCESS_TOKEN }}
  TEST_REFRESH_TOKEN: ${{secrets.TEST_REFRESH_TOKEN }}
on:
  push:
    branches-ignore:
      - main
jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest
    steps:
      # checkout and install pnpm
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false
      # setup node
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # install dependencies
      - run: pnpm install

      # dotenv
      - name: create dotenv
        run: |
          touch apps/bottle/.env.local
          echo "TEST_ACCESS_TOKEN=${{ secrets.TEST_ACCESS_TOKEN }}" >> apps/bottle/.env.local
          echo "TEST_REFRESH_TOKEN=${{ secrets.TEST_REFRESH_TOKEN }}" >> apps/bottle/.env.local
          echo "NEXT_PUBLIC_SERVER_BASE_URL=${{ secrets.NEXT_PUBLIC_SERVER_BASE_URL }}" >> apps/bottle/.env.local
        env:
          NEXT_PUBLIC_SERVER_BASE_URL: ${{ secrets.NEXT_PUBLIC_SERVER_BASE_URL }}

      # determine whether @bottlesteam/bottle is cached on remote
      - name: Determine build status for @bottlesteam/bottle
        id: determine-status
        run: |
          pnpx turbo run build --dry-run=json > result.json
          build_status=$(jq -r '.tasks[] | select(.taskId == "@bottlesteam/bottle#build") | .cache.status' result.json)
          echo "::set-output name=build_status::$build_status"

      # install playwright browsers if it is not cached
      - run: pnpx playwright install
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      # install playwright depedencies (NOTE: this is not cache-able)
      - run: pnpx playwright install-deps
        if: steps.determine-status.outputs.build_status == 'MISS'

      # run turbo tasks
      - run: pnpm run ci

      # Save build_status as an artifact
      - name: Save build status as artifact
        run: echo ${{ steps.determine-status.outputs.build_status }} > build_status.txt
      - name: Upload build status artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-status
          path: build_status.txt

      # Trigger the next workflow
      - name: Trigger Deploy Workflows
        run: |
          if [ "${{ steps.determine-status.outputs.build_status }}" == "MISS" ]; then
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/dispatches \
              -d '{"event_type":"deploy_bottle"}'
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/dispatches \
              -d '{"event_type":"deploy_web"}'
          fi
